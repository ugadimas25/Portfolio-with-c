#pragma checksum "C:\Users\User\Downloads\arcgis-runtime-demos-dotnet-main\arcgis-runtime-demos-dotnet-main\src\OfflineWorkflowsSample\OfflineWorkflowsSample\Views\NavigationPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "99250AEAA747BD5C9656F711CF91CF3133DE38760D1D77C8808530B453F1972C"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OfflineWorkflowSample.Views
{
    partial class NavigationPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_NavigationView_IsBackEnabled(global::Microsoft.UI.Xaml.Controls.NavigationView obj, global::System.Boolean value)
            {
                obj.IsBackEnabled = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_PersonPicture_DisplayName(global::Windows.UI.Xaml.Controls.PersonPicture obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.DisplayName = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_PersonPicture_ProfilePicture(global::Windows.UI.Xaml.Controls.PersonPicture obj, global::Windows.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.ProfilePicture = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class NavigationPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            INavigationPage_Bindings
        {
            private global::OfflineWorkflowSample.Views.NavigationPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.NavigationView obj2;
            private global::Windows.UI.Xaml.Controls.Border obj3;
            private global::Windows.UI.Xaml.Controls.TextBlock obj4;
            private global::Windows.UI.Xaml.Controls.PersonPicture obj9;
            private global::Windows.UI.Xaml.Controls.TextBlock obj10;
            private global::Windows.UI.Xaml.Controls.TextBlock obj13;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2IsBackEnabledDisabled = false;
            private static bool isobj3VisibilityDisabled = false;
            private static bool isobj4TextDisabled = false;
            private static bool isobj9DisplayNameDisabled = false;
            private static bool isobj9ProfilePictureDisabled = false;
            private static bool isobj10TextDisabled = false;
            private static bool isobj13TextDisabled = false;

            private NavigationPage_obj1_BindingsTracking bindingsTracking;

            public NavigationPage_obj1_Bindings()
            {
                this.bindingsTracking = new NavigationPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 61 && columnNumber == 13)
                {
                    isobj2IsBackEnabledDisabled = true;
                }
                else if (lineNumber == 106 && columnNumber == 13)
                {
                    isobj3VisibilityDisabled = true;
                }
                else if (lineNumber == 111 && columnNumber == 17)
                {
                    isobj4TextDisabled = true;
                }
                else if (lineNumber == 93 && columnNumber == 33)
                {
                    isobj9DisplayNameDisabled = true;
                }
                else if (lineNumber == 94 && columnNumber == 33)
                {
                    isobj9ProfilePictureDisabled = true;
                }
                else if (lineNumber == 95 && columnNumber == 58)
                {
                    isobj10TextDisabled = true;
                }
                else if (lineNumber == 52 && columnNumber == 21)
                {
                    isobj13TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Views\NavigationPage.xaml line 56
                        this.obj2 = (global::Microsoft.UI.Xaml.Controls.NavigationView)target;
                        break;
                    case 3: // Views\NavigationPage.xaml line 103
                        this.obj3 = (global::Windows.UI.Xaml.Controls.Border)target;
                        break;
                    case 4: // Views\NavigationPage.xaml line 107
                        this.obj4 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 9: // Views\NavigationPage.xaml line 90
                        this.obj9 = (global::Windows.UI.Xaml.Controls.PersonPicture)target;
                        break;
                    case 10: // Views\NavigationPage.xaml line 95
                        this.obj10 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 13: // Views\NavigationPage.xaml line 48
                        this.obj13 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // INavigationPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::OfflineWorkflowSample.Views.NavigationPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::OfflineWorkflowSample.Views.NavigationPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ContentFrame(obj.ContentFrame, phase);
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ContentFrame(global::Windows.UI.Xaml.Controls.Frame obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ContentFrame(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ContentFrame_CanGoBack(obj.CanGoBack, phase);
                    }
                }
            }
            private void Update_ContentFrame_CanGoBack(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\NavigationPage.xaml line 56
                    if (!isobj2IsBackEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_NavigationView_IsBackEnabled(this.obj2, obj);
                    }
                }
            }
            private void Update_ViewModel(global::OfflineWorkflowsSample.MainViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_IsBusy(obj.IsBusy, phase);
                        this.Update_ViewModel_IsBusyText(obj.IsBusyText, phase);
                        this.Update_ViewModel_UserProfile(obj.UserProfile, phase);
                        this.Update_ViewModel_Title(obj.Title, phase);
                    }
                }
            }
            private void Update_ViewModel_IsBusy(global::System.Boolean obj, int phase)
            {
                if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                {
                    this.Update_ViewModel_IsBusy_Cast_IsBusy_To_Visibility(obj ? global::Windows.UI.Xaml.Visibility.Visible : global::Windows.UI.Xaml.Visibility.Collapsed, phase);
                }
            }
            private void Update_ViewModel_IsBusy_Cast_IsBusy_To_Visibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\NavigationPage.xaml line 103
                    if (!isobj3VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj3, obj);
                    }
                }
            }
            private void Update_ViewModel_IsBusyText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\NavigationPage.xaml line 107
                    if (!isobj4TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj4, obj, null);
                    }
                }
            }
            private void Update_ViewModel_UserProfile(global::OfflineWorkflowsSample.Models.UserProfileModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_UserProfile(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_UserProfile_FullName(obj.FullName, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_UserProfile_ProfilePicture(obj.ProfilePicture, phase);
                    }
                }
            }
            private void Update_ViewModel_UserProfile_FullName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\NavigationPage.xaml line 90
                    if (!isobj9DisplayNameDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_PersonPicture_DisplayName(this.obj9, obj, null);
                    }
                    // Views\NavigationPage.xaml line 95
                    if (!isobj10TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj10, obj, null);
                    }
                }
            }
            private void Update_ViewModel_UserProfile_ProfilePicture(global::Windows.UI.Xaml.Media.ImageSource obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\NavigationPage.xaml line 90
                    if (!isobj9ProfilePictureDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_PersonPicture_ProfilePicture(this.obj9, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\NavigationPage.xaml line 48
                    if (!isobj13TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj13, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class NavigationPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<NavigationPage_obj1_Bindings> weakRefToBindingObj; 

                public NavigationPage_obj1_BindingsTracking(NavigationPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<NavigationPage_obj1_Bindings>(obj);
                }

                public NavigationPage_obj1_Bindings TryGetBindingObject()
                {
                    NavigationPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ContentFrame(null);
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_UserProfile(null);
                }

                public void DependencyPropertyChanged_ContentFrame_CanGoBack(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    NavigationPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Windows.UI.Xaml.Controls.Frame obj = sender as global::Windows.UI.Xaml.Controls.Frame;
                        if (obj != null)
                        {
                            bindings.Update_ContentFrame_CanGoBack(obj.CanGoBack, DATA_CHANGED);
                        }
                    }
                }
                private global::Windows.UI.Xaml.Controls.Frame cache_ContentFrame = null;
                private long tokenDPC_ContentFrame_CanGoBack = 0;
                public void UpdateChildListeners_ContentFrame(global::Windows.UI.Xaml.Controls.Frame obj)
                {
                    if (obj != cache_ContentFrame)
                    {
                        if (cache_ContentFrame != null)
                        {
                            cache_ContentFrame.UnregisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Frame.CanGoBackProperty, tokenDPC_ContentFrame_CanGoBack);
                            cache_ContentFrame = null;
                        }
                        if (obj != null)
                        {
                            cache_ContentFrame = obj;
                            tokenDPC_ContentFrame_CanGoBack = obj.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Frame.CanGoBackProperty, DependencyPropertyChanged_ContentFrame_CanGoBack);
                        }
                    }
                }
                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    NavigationPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::OfflineWorkflowsSample.MainViewModel obj = sender as global::OfflineWorkflowsSample.MainViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_IsBusy(obj.IsBusy, DATA_CHANGED);
                                bindings.Update_ViewModel_IsBusyText(obj.IsBusyText, DATA_CHANGED);
                                bindings.Update_ViewModel_UserProfile(obj.UserProfile, DATA_CHANGED);
                                bindings.Update_ViewModel_Title(obj.Title, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsBusy":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsBusy(obj.IsBusy, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsBusyText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsBusyText(obj.IsBusyText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "UserProfile":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_UserProfile(obj.UserProfile, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Title":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Title(obj.Title, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::OfflineWorkflowsSample.MainViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::OfflineWorkflowsSample.MainViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_UserProfile(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    NavigationPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::OfflineWorkflowsSample.Models.UserProfileModel obj = sender as global::OfflineWorkflowsSample.Models.UserProfileModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_UserProfile_ProfilePicture(obj.ProfilePicture, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "ProfilePicture":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_UserProfile_ProfilePicture(obj.ProfilePicture, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::OfflineWorkflowsSample.Models.UserProfileModel cache_ViewModel_UserProfile = null;
                public void UpdateChildListeners_ViewModel_UserProfile(global::OfflineWorkflowsSample.Models.UserProfileModel obj)
                {
                    if (obj != cache_ViewModel_UserProfile)
                    {
                        if (cache_ViewModel_UserProfile != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_UserProfile).PropertyChanged -= PropertyChanged_ViewModel_UserProfile;
                            cache_ViewModel_UserProfile = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_UserProfile = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_UserProfile;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\NavigationPage.xaml line 56
                {
                    this.NavigationView = (global::Microsoft.UI.Xaml.Controls.NavigationView)(target);
                    ((global::Microsoft.UI.Xaml.Controls.NavigationView)this.NavigationView).BackRequested += this.NavigationView_OnBackRequested;
                    ((global::Microsoft.UI.Xaml.Controls.NavigationView)this.NavigationView).ItemInvoked += this.NavigationView_OnItemInvoked;
                }
                break;
            case 5: // Views\NavigationPage.xaml line 65
                {
                    this.LocalContentMenuItem = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)(target);
                }
                break;
            case 6: // Views\NavigationPage.xaml line 70
                {
                    this.MyFoldersMenuItem = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)(target);
                }
                break;
            case 7: // Views\NavigationPage.xaml line 75
                {
                    this.MyGroupsMenuItem = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)(target);
                }
                break;
            case 8: // Views\NavigationPage.xaml line 80
                {
                    this.SearchMenuItem = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)(target);
                }
                break;
            case 11: // Views\NavigationPage.xaml line 101
                {
                    this.ContentFrame = (global::Windows.UI.Xaml.Controls.Frame)(target);
                }
                break;
            case 12: // Views\NavigationPage.xaml line 43
                {
                    this.DraggablePart = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\NavigationPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    NavigationPage_obj1_Bindings bindings = new NavigationPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

